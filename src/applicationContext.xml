<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
               xmlns:context="http://www.springframework.org/schema/context"
               xmlns:p="http://www.springframework.org/schema/p"
               xmlns:tx="http://www.springframework.org/schema/tx"
               xmlns:aop="http://www.springframework.org/schema/aop"
               xsi:schemaLocation="http://www.springframework.org/schema/beans 
                                                       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                                                       http://www.springframework.org/schema/context 
                                                       http://www.springframework.org/schema/context/spring-context-2.5.xsd
                                                       http://www.springframework.org/schema/tx 
                                                       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                                                       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd" >
	<context:annotation-config/>  
	<context:component-scan base-package="core" /> 
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/sshweb?useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop> 
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="current_session_context_class">thread</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
			<value>core.model</value>
			</list>
		</property>
		<!--  
		<property name="annotatedClasses">
			<list>
				<value>core.model.Admin</value>
				<value>core.model.Barrage</value>
				<value>core.model.Course</value>
				<value>core.model.CourseComment</value>
				<value>core.model.CourseResource</value>
				<value>core.model.Student_Course</value>
				<value>core.model.CourseType</value>
				<value>core.model.Note</value>
				<value>core.model.Post</value>
				<value>core.model.Teacher</value>
				<value>core.model.Student</value>
				<value>core.model.Video</value>
			</list>
		</property>
		-->
	</bean>
	
	<bean id="transactionManager-hibernate" abstract="false" lazy-init="default" autowire="default"
            class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
	<tx:advice id="txAdvice" transaction-manager="transactionManager-hibernate">
		<tx:attributes>
			<!-- 所有以browse、list、load、get及 is开头的业务逻辑方法均不需要事务控制且只读 -->
			<tx:method name="get*" propagation="NOT_SUPPORTED"
				read-only="true" />
			<tx:method name="set*" propagation="NOT_SUPPORTED"
				read-only="true" />
			<!-- 设置所有方法均进行事务控制，如果当前没有事务，则新建一个事务 -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>


	<!-- 基于AOP技术的事务管理实现 -->
	<aop:config>
		<!-- 定义一个事务切入点,拦截com.eportal.service.impl包中所有类的所有方法 -->
		<aop:pointcut id="transactionPointcut"
			expression="execution(* core.service.impl.*.*(..))" />
		<!-- 引用txAdvice事务通知 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut" />
	</aop:config>
</beans>
